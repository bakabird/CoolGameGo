import { Enum } from './Enum';
import { Interface } from "./Interface";
import { TypeContainer } from "./TypeContainer";
import { Type } from "./TypeDefinition";
declare global {
    interface Function {
        GenericTypeArguments: Array<Interface<any> | Function>;
    }
}
export declare function SafeCast<T>(type: TypeContainer | Type<T> | Interface<T> | Enum<T> | Function, obj: any): T;
export declare function SafeCastToInterface<T>(obj: any, interfaceDefinition: Interface<T>): T;
export declare function GetValueOf<T>(obj: any): T;
